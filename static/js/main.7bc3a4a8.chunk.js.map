{"version":3,"sources":["components/images/WPawn.PNG","components/images/WRook.PNG","components/images/WBishop.PNG","components/images/WKnight.PNG","components/images/WKing.PNG","components/images/WQueen.PNG","components/images/Blank.PNG","components/images/BPawn.PNG","components/images/BRook.PNG","components/images/BBishop.PNG","components/images/BKnight.PNG","components/images/BKing.PNG","components/images/BQueen.PNG","components/Image.js","reducers/clickReducer.js","reducers/rootReducer.js","store.js","components/Tile.js","actions.js","components/Board.js","components/Title.js","App.js","index.js"],"names":["module","exports","imgMap","BPawn","BKnight","BBishop","BRook","BQueen","BKing","none","WKing","WQueen","WRook","WBishop","WKnight","WPawn","stringMap","Image","props","piece","src","name","style","display","margin","height","alt","initialState","board","row1","Array","fill","row2to5","row6","concat","initialBoard","turn","tileBg","selectedTile","hightlightedPieces","clickReducer","state","action","type","newTile","highlightedPieces","tile","hightlightTile","rootReducer","combineReducers","tiles","store","createStore","Tile","dispatch","useDispatch","useSelector","bg","border","backgroundColor","backgroundImage","onClick","getState","highlight","highlightedTile","move","handleClick","backgrounds","Board","map","index","key","className","modeMap","colorMap","Title","id","color","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7bc3a4a8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/WPawn.4e0550ce.PNG\";","module.exports = __webpack_public_path__ + \"static/media/WRook.e4dd7145.PNG\";","module.exports = __webpack_public_path__ + \"static/media/WBishop.b95eba4f.PNG\";","module.exports = __webpack_public_path__ + \"static/media/WKnight.a1d5ea38.PNG\";","module.exports = __webpack_public_path__ + \"static/media/WKing.c087e4bc.PNG\";","module.exports = __webpack_public_path__ + \"static/media/WQueen.678f5a77.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Blank.37b0d687.PNG\";","module.exports = __webpack_public_path__ + \"static/media/BPawn.b5108f54.PNG\";","module.exports = __webpack_public_path__ + \"static/media/BRook.3c507f6a.PNG\";","module.exports = __webpack_public_path__ + \"static/media/BBishop.8ab4c876.PNG\";","module.exports = __webpack_public_path__ + \"static/media/BKnight.95ada093.PNG\";","module.exports = __webpack_public_path__ + \"static/media/BKing.7e884537.PNG\";","module.exports = __webpack_public_path__ + \"static/media/BQueen.73e7dc3b.PNG\";","import React from \"react\";\r\nimport WPawn from \"./images/WPawn.PNG\";\r\nimport WRook from \"./images/WRook.PNG\";\r\nimport WBishop from \"./images/WBishop.PNG\";\r\nimport WKnight from \"./images/WKnight.PNG\";\r\nimport WKing from \"./images/WKing.PNG\";\r\nimport WQueen from \"./images/WQueen.PNG\";\r\nimport none from \"./images/Blank.PNG\";\r\nimport BPawn from \"./images/BPawn.PNG\";\r\nimport BRook from \"./images/BRook.PNG\";\r\nimport BBishop from \"./images/BBishop.PNG\";\r\nimport BKnight from \"./images/BKnight.PNG\";\r\nimport BKing from \"./images/BKing.PNG\";\r\nimport BQueen from \"./images/BQueen.PNG\";\r\n\r\nconst imgMap = [\r\n  BPawn,\r\n  BKnight,\r\n  BBishop,\r\n  BRook,\r\n  BQueen,\r\n  BKing,\r\n  none,\r\n  WKing,\r\n  WQueen,\r\n  WRook,\r\n  WBishop,\r\n  WKnight,\r\n  WPawn\r\n];\r\n\r\nconst stringMap = [\r\n  \"Black Pawn\",\r\n  \"Black Knight\",\r\n  \"Black Bishop\",\r\n  \"Black Rook\",\r\n  \"Black Queen\",\r\n  \"Black King\",\r\n  \"Blank\",\r\n  \"White King\",\r\n  \"White Queen\",\r\n  \"White Rook\",\r\n  \"White Bishop\",\r\n  \"White Knight\",\r\n  \"White Pawn\"\r\n];\r\n\r\nfunction getImg(piece) {\r\n  return imgMap[piece + 6];\r\n}\r\n\r\nfunction Image(props) {\r\n  const imgStyle = {\r\n    display: \"block\",\r\n    margin: \"auto\",\r\n    height: \"100%\"\r\n  };\r\n  return <img src={getImg(props.name)} style={imgStyle} alt={stringMap[props.name + 6]} />;\r\n}\r\n\r\nexport default Image;\r\n","function initialBoard() {\r\n  const row0 = [-3, -4, -5, -2, -1, -5, -4, -3];\r\n  const row1 = new Array(8).fill(-6);\r\n  const row2to5 = new Array(32).fill(0);\r\n  const row6 = new Array(8).fill(6);\r\n  const row7 = [3, 4, 5, 2, 1, 5, 4, 3];\r\n  return row0.concat(row1, row2to5, row6, row7);\r\n}\r\n\r\nconst initialState = {\r\n  board: initialBoard(),\r\n  turn: true,\r\n  tileBg: new Array(64).fill(0),\r\n  selectedTile: -1,\r\n  hightlightedPieces: -1\r\n};\r\n\r\nfunction clickReducer(state = initialState, action) {\r\n  if (action.type === \"UNHIGHLIGHT\" || action.type === \"MOVE\") {\r\n    if (action.type === \"MOVE\") {\r\n      state.board[action.newTile] = state.board[state.selectedTile];\r\n      state.board[state.selectedTile] = 0;\r\n      state.turn = !state.turn;\r\n    }\r\n    state.tileBg[state.selectedTile] = 0;\r\n    state.tileBg[state.highlightedPieces] = 0;\r\n    state.selectedTile = -1;\r\n    state.highlightedPieces = -1;\r\n  } else if (action.type === \"HIGHLIGHT\") {\r\n    if (state.selectedTile !== -1) {\r\n      state.tileBg[state.selectedTile] = 0;\r\n      state.tileBg[state.highlightedPieces] = 0;\r\n    }\r\n    state.selectedTile = action.tile;\r\n    state.tileBg[action.tile] = 1;\r\n    let hightlightTile = action.piece < 0 ? (action.tile + 8) % 64 : (action.tile + 56) % 64;\r\n    state.highlightedPieces = hightlightTile;\r\n    if (\r\n      (action.piece > 0 && state.board[hightlightTile] < 0) ||\r\n      (action.piece < 0 && state.board[hightlightTile] > 0)\r\n    ) {\r\n      state.tileBg[hightlightTile] = 3;\r\n    } else {\r\n      state.tileBg[hightlightTile] = 2;\r\n    }\r\n  }\r\n  return state;\r\n}\r\n\r\nexport default clickReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport clickReducer from \"./clickReducer\";\r\n\r\nconst rootReducer = combineReducers({ tiles: clickReducer });\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nlet store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport Image from \"./Image\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { highlight, unHighlight, move } from \"../actions\";\r\nimport store from \"../store\";\r\n\r\nfunction handleClick(tile, piece, dispatch) {\r\n  let turn = store.getState(\"tiles\").tiles.turn;\r\n  if ((turn && piece > 0) || (!turn && piece < 0)) {\r\n    dispatch(highlight(tile, piece));\r\n    return;\r\n  }\r\n  let highlightedTile = store.getState(\"tiles\").tiles.highlightedPieces;\r\n  let selectedTile = store.getState(\"tiles\").tiles.selectedTile;\r\n  if (selectedTile !== -1 && highlightedTile === tile) {\r\n    dispatch(move(tile, piece));\r\n    return;\r\n  }\r\n  dispatch(unHighlight());\r\n}\r\n\r\nfunction Tile(props) {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(state => state.tiles.board[props.tile]);\r\n  const bg = useSelector(state => state.tiles.tileBg[props.tile]);\r\n  const style = {\r\n    border: \"2px solid #666\",\r\n    backgroundColor: props.bg,\r\n    backgroundImage: \"none\",\r\n    height: \"80px\"\r\n  };\r\n\r\n  if (bg === 1) {\r\n    style.backgroundColor = \"#90f694\";\r\n    style.backgroundImage = \"radial-gradient(lime, green)\";\r\n  } else if (bg === 2) {\r\n    style.backgroundColor = \"#5ba8e6\";\r\n    style.backgroundImage = \"radial-gradient(blue, darkblue)\";\r\n  } else if (bg === 3) {\r\n    style.backgroundColor = \"#db1010\";\r\n    style.backgroundImage = \"radial-gradient(red, darkred)\";\r\n  }\r\n  return (\r\n    <div style={style} onClick={() => handleClick(props.tile, name, dispatch)}>\r\n      <Image name={name} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tile;\r\n","export function highlight(tile, piece) {\r\n  return { type: \"HIGHLIGHT\", tile, piece };\r\n}\r\n\r\nexport function unHighlight() {\r\n  return { type: \"UNHIGHLIGHT\" };\r\n}\r\n\r\nexport function move(newTile, piece) {\r\n  return { type: \"MOVE\", newTile, piece };\r\n}\r\n","import React from \"react\";\r\nimport Tile from \"./Tile\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction initialBoard() {\r\n  const row0 = [-3, -4, -5, -2, -1, -5, -4, -3];\r\n  const row1 = new Array(8).fill(-6);\r\n  const row2to5 = new Array(32).fill(0);\r\n  const row6 = new Array(8).fill(6);\r\n  const row7 = [3, 4, 5, 2, 1, 5, 4, 3];\r\n  return row0.concat(row1, row2to5, row6, row7);\r\n}\r\n\r\nconst backgrounds = [\"white\", \"black\"];\r\n\r\ninitialBoard();\r\nfunction Board() {\r\n  const board = useSelector(state => state.tiles.board);\r\n\r\n  const tiles = board.map((piece, index) => (\r\n    <Tile key={index} tile={index} bg={backgrounds[index % 2]} />\r\n  ));\r\n  return <div className={\"board\"}>{tiles}</div>;\r\n}\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst modeMap = [\"White's Turn\", [\"Black's Turn\"]];\r\nconst colorMap = [\"white\", \"black\"];\r\n\r\nfunction Title() {\r\n  let turn = useSelector(state => state.tiles.turn);\r\n  let index = turn ? 0 : 1;\r\n  return (\r\n    <h1 id=\"title\" style={{ color: colorMap[index] }}>\r\n      {modeMap[index]}\r\n    </h1>\r\n  );\r\n}\r\n\r\nexport default Title;\r\n","import React from \"react\";\nimport \"./main.css\";\nimport Board from \"./components/Board\";\nimport Title from \"./components/Title\";\n\nfunction App() {\n  return (\n    <div>\n      <Title />\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}